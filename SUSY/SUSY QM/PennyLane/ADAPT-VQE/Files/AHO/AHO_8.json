{
    "starttime": "2025-03-26_14-27-09",
    "endtime": "2025-03-26_15-09-23",
    "potential": "AHO",
    "cutoff": 8,
    "exact_eigenvalues": [
        0.032010110009228175,
        1.6801555245826187,
        1.8335255754908484,
        3.9633739078624335,
        4.009854623022735,
        4.036923690848564,
        8.26209394243031,
        8.77647491444728,
        42.528080920192615,
        43.433335360060745,
        55.306689599326,
        56.206325851357185,
        381.87853888129416,
        382.8212806220672,
        408.6442927673945,
        409.5870437096133
    ],
    "ansatz": "circuit.txt",
    "shots": 1024,
    "Optimizer": {
        "name": "differential_evolution",
        "bounds": "[(0, 2 * np.pi)]",
        "maxiter": 10000,
        "tolerance": 0.001,
        "abs_tolerance": 0.001,
        "strategy": "randtobest1bin",
        "popsize": 20,
        "init": "scaled_samples"
    },
    "num_VQE": 40,
    "num_steps": 6,
    "num_grad_checks": 1,
    "phi": 1.5707963267948966,
    "operator_pool": [
        "RY(1.5707963267948966, wires=[0])",
        "RZ(1.5707963267948966, wires=[0])",
        "RY(1.5707963267948966, wires=[1])",
        "RZ(1.5707963267948966, wires=[1])",
        "RY(1.5707963267948966, wires=[2])",
        "RZ(1.5707963267948966, wires=[2])",
        "RY(1.5707963267948966, wires=[3])",
        "RZ(1.5707963267948966, wires=[3])",
        "CRX(1.5707963267948966, wires=[0, 1])",
        "CRX(1.5707963267948966, wires=[0, 2])",
        "CRX(1.5707963267948966, wires=[0, 3])",
        "CRX(1.5707963267948966, wires=[1, 0])",
        "CRX(1.5707963267948966, wires=[1, 2])",
        "CRX(1.5707963267948966, wires=[1, 3])",
        "CRX(1.5707963267948966, wires=[2, 0])",
        "CRX(1.5707963267948966, wires=[2, 1])",
        "CRX(1.5707963267948966, wires=[2, 3])",
        "CRX(1.5707963267948966, wires=[3, 0])",
        "CRX(1.5707963267948966, wires=[3, 1])",
        "CRX(1.5707963267948966, wires=[3, 2])"
    ],
    "min_energies": [
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.1740613409863612,
        0.17022211852752012,
        0.17022211852752012,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.17022211852752012,
        0.0320101100092408,
        0.1855790083628845,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.1740613409863612,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408,
        0.0320101100092408
    ],
    "op_params": [
        "0.6021147042820152",
        "0.8154028335254297",
        "1.628847965194569",
        "5.612251468827689",
        "2.8526065090948074",
        "2.658005621597038",
        "1.5608697491825174",
        "0.7378768641393441",
        "4.104062008418278",
        "2.0349260498759514",
        "1.5854835011725166",
        "0.577855259523413",
        "1.4926779027943382",
        "1.9471296310711304",
        "2.301878421725182",
        "3.7807765426521303",
        "3.2166878784336714",
        "1.8715713921799608",
        "4.17803884157507",
        "3.2810529167351614",
        "4.540928325311779",
        "1.2012687612181572",
        "2.728916542202259",
        "0.3944948875608749",
        "1.9000557171108667",
        "1.4895018518436807",
        "6.110264178903239",
        "4.147512555020205",
        "4.029639428099918",
        "5.413406680550754",
        "4.562722773700399",
        "2.1355925079231652",
        "1.9400021877952724",
        "1.7912749852221",
        "4.026281301682284",
        "1.5861311088442047",
        "1.3268866846738583",
        "2.002891879425021",
        "2.801219754692758",
        "3.201526588478114"
    ],
    "op_list": [
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1])]",
        "[RY(np.float64(1.5707963267948966), wires=[1])]",
        "[RY(np.float64(1.5707963267948966), wires=[1])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), RY(np.float64(1.5707963267948966), wires=[2])]",
        "[RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 1]), RY(np.float64(1.5707963267948966), wires=[1]), CRX(1.5707963267948966, wires=[0, 2]), RY(np.float64(1.5707963267948966), wires=[2])]"
    ],
    "num_iters": [
        6,
        5,
        5,
        5,
        6,
        6,
        6,
        5,
        6,
        5,
        5,
        6,
        2,
        2,
        2,
        6,
        5,
        5,
        5,
        5,
        6,
        3,
        5,
        4,
        5,
        5,
        5,
        3,
        5,
        5,
        5,
        5,
        5,
        6,
        5,
        5,
        5,
        6,
        5,
        6
    ],
    "success": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
    ],
    "run_times": [
        "0:39:07.254133",
        "0:29:59.242744",
        "0:30:15.391620",
        "0:30:07.898617",
        "0:42:13.626921",
        "0:39:01.413146",
        "0:38:42.529405",
        "0:29:46.251155",
        "0:38:47.475162",
        "0:30:02.515387",
        "0:29:57.835790",
        "0:39:05.646804",
        "0:18:55.452610",
        "0:18:49.211148",
        "0:18:58.693977",
        "0:38:36.583485",
        "0:30:03.936357",
        "0:29:55.752880",
        "0:29:54.652883",
        "0:30:07.853888",
        "0:39:10.439813",
        "0:29:56.736223",
        "0:29:58.243776",
        "0:38:44.594317",
        "0:30:05.887542",
        "0:29:52.670883",
        "0:29:41.543826",
        "0:29:44.421924",
        "0:30:05.554178",
        "0:29:57.588471",
        "0:30:06.877058",
        "0:29:54.488169",
        "0:29:52.408143",
        "0:38:25.239313",
        "0:29:50.993018",
        "0:29:46.559429",
        "0:29:50.368472",
        "0:38:20.901270",
        "0:30:12.497676",
        "0:39:56.585393"
    ],
    "seeds": [
        67965925,
        82570109,
        97174293,
        111778477,
        2925872,
        17530056,
        32134240,
        46738424,
        61342608,
        75946792,
        90550976,
        105155160,
        119759344,
        10906739,
        25510923,
        40115107,
        54719291,
        69323475,
        83927659,
        98531843,
        113136027,
        4283422,
        18887606,
        33491790,
        48095974,
        62700158,
        77304342,
        91908526,
        106512710,
        121116894,
        12264289,
        26868473,
        41472657,
        56076841,
        70681025,
        85285209,
        99889393,
        114493577,
        5640972,
        20245156
    ],
    "parallel_run_time": "0:42:13.813018",
    "total_VQE_time": "21:16:03.817006",
    "total_device_time": "0:54:13.978870"
}