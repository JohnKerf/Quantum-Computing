{
    "starttime": "2025-03-27_10-54-53",
    "endtime": "2025-03-27_10-58-42",
    "potential": "DW",
    "cutoff": 8,
    "exact_eigenvalues": [
        0.884580443866402,
        0.8877254625887899,
        2.6938728430897987,
        2.7408249143186754,
        4.355465236456681,
        4.848650098875316,
        4.930392589445417,
        6.619305862718353,
        7.90545028974211,
        10.091377536643838,
        20.66420215376546,
        23.046376848503844,
        25.632459207718036,
        28.12147572822082,
        75.8593442491825,
        82.71849653486416
    ],
    "ansatz": "circuit.txt",
    "shots": 1024,
    "Optimizer": {
        "name": "differential_evolution",
        "bounds": "[(0, 2 * np.pi)]",
        "maxiter": 10000,
        "tolerance": 0.001,
        "abs_tolerance": 0.01,
        "strategy": "randtobest1bin",
        "popsize": 20,
        "init": "scaled_samples"
    },
    "num_VQE": 40,
    "num_steps": 10,
    "num_grad_checks": 10,
    "phi": 0.0,
    "basis_state": [
        0,
        0,
        0,
        0
    ],
    "operator_pool": [
        "RY(0.0, wires=[0])",
        "RZ(0.0, wires=[0])",
        "RX(0.0, wires=[0])",
        "RY(0.0, wires=[1])",
        "RZ(0.0, wires=[1])",
        "RX(0.0, wires=[1])",
        "RY(0.0, wires=[2])",
        "RZ(0.0, wires=[2])",
        "RX(0.0, wires=[2])",
        "RY(0.0, wires=[3])",
        "RZ(0.0, wires=[3])",
        "RX(0.0, wires=[3])",
        "CRY(0.0, wires=[0, 1]))",
        "CRX(0.0, wires=[0, 1])",
        "CRY(0.0, wires=[0, 2]))",
        "CRX(0.0, wires=[0, 2])",
        "CRY(0.0, wires=[0, 3]))",
        "CRX(0.0, wires=[0, 3])",
        "CRY(0.0, wires=[1, 0]))",
        "CRX(0.0, wires=[1, 0])",
        "CRY(0.0, wires=[1, 2]))",
        "CRX(0.0, wires=[1, 2])",
        "CRY(0.0, wires=[1, 3]))",
        "CRX(0.0, wires=[1, 3])",
        "CRY(0.0, wires=[2, 0]))",
        "CRX(0.0, wires=[2, 0])",
        "CRY(0.0, wires=[2, 1]))",
        "CRX(0.0, wires=[2, 1])",
        "CRY(0.0, wires=[2, 3]))",
        "CRX(0.0, wires=[2, 3])",
        "CRY(0.0, wires=[3, 0]))",
        "CRX(0.0, wires=[3, 0])",
        "CRY(0.0, wires=[3, 1]))",
        "CRX(0.0, wires=[3, 1])",
        "CRY(0.0, wires=[3, 2]))",
        "CRX(0.0, wires=[3, 2])"
    ],
    "all_energies": [
        [
            0.961360516540505,
            0.9373228707196627,
            0.9050119385960763,
            0.8941355061520201,
            0.8923227674113441,
            0.8845804438664048
        ],
        [
            0.9722298032510786,
            0.9391356094603387,
            0.9247862071033425,
            0.971167239435661,
            0.9892753004522401,
            0.8941355061520201,
            0.9315071407034491,
            0.8962737558347611,
            0.8920770831202265,
            0.8885314322898217
        ],
        [
            0.9753045813044889,
            0.9450651942646019,
            0.9089629270194933,
            0.8923227674113441,
            0.8882059213477569,
            0.8845804438664048
        ],
        [
            0.9830202047059119,
            0.933777219889258,
            0.9047662543049587,
            0.8845804438664048
        ],
        [
            0.959700285368241,
            0.9425880835680378,
            0.9419639942466747,
            0.8884516056388745,
            0.8920770831202265,
            0.8980066679244898,
            0.9105299814690517,
            0.9018716253586838,
            0.8918313988291089,
            0.8921569097711739
        ],
        [
            0.9669512403309451,
            0.9425154026505731,
            0.9603777793760346,
            0.9371498673460098,
            0.9280861736426296,
            0.897269615051137,
            0.8923227674113441,
            0.9036905684376354,
            0.8884516056388745,
            0.8939696485118499
        ],
        [
            0.9682132796436795,
            0.9409483482010147,
            0.9175352521406384,
            0.8941355061520201,
            0.8920770831202265,
            0.8902643443795504
        ],
        [
            0.9857338250244614,
            0.9446465065998315,
            0.9417518776535567,
            0.8885314322898217,
            0.9943286748864967,
            0.8863931826070808,
            0.8902643443795505
        ],
        [
            0.9722298032510786,
            0.9500120419043949,
            0.9208352186799253,
            0.8863931826070808,
            0.8938898218609026,
            0.9317116511239816,
            0.8863931826070808,
            0.8845804438664048
        ],
        [
            0.9722298032510786,
            0.9461408801319252,
            0.9358284971875688,
            0.8923227674113441,
            0.946704929631625,
            0.9356626395473986,
            0.9083190508688461,
            0.8884516056388745,
            0.9155700058315502,
            0.9045205700138412
        ],
        [
            0.9705767178122973,
            0.9433251364413906,
            0.9984986474575149,
            0.9251117180454074,
            0.8918313988291089,
            0.8938898218609025,
            0.8998992333161131,
            0.9000650909562833,
            0.895456876310461,
            0.8924824207132387
        ],
        [
            0.9789013297066753,
            0.9428337678591554,
            0.9153970024578973,
            0.9353371286053338,
            0.9505760914040947,
            1.026534249630679,
            0.8941355061520201,
            0.8882059213477569,
            0.8902643443795504,
            0.8845804438664048
        ],
        [
            0.9879732566839804,
            0.9451450209155492,
            0.910695839109222,
            0.9000650909562833,
            0.8993280380829306,
            0.9298989123833056,
            0.8923227674113441,
            0.8882059213477569,
            0.8938898218609026,
            0.8845804438664048
        ],
        [
            0.9633257628495931,
            0.9537102003032116,
            0.9306359652566584,
            0.8974426184247899,
            0.8920770831202265,
            0.8845804438664048
        ],
        [
            0.9688500100608441,
            0.9821902031297061,
            0.9493345478966012,
            0.9335243898646577,
            0.8863931826070808
        ],
        [
            0.9722298032510786,
            0.9340157584468929,
            0.9139097746592862,
            0.8923227674113441,
            0.9425154026505731,
            0.9108554924111167,
            0.8884516056388745,
            0.8845804438664048
        ],
        [
            0.9722298032510786,
            0.9326217073709872,
            0.9393812937514563,
            0.9396269780425738,
            0.8924025940622914,
            0.8980066679244898,
            0.8882059213477569,
            0.8884516056388745
        ],
        [
            0.9722298032510786,
            0.9336973932383106,
            0.9335243898646577,
            0.9013137801972595,
            0.8884516056388745,
            0.8975152993422546,
            0.8923227674113441,
            0.8845804438664048
        ],
        [
            0.959892615132075,
            0.9606163179336696,
            0.9464663910739901,
            0.9373955516371273,
            0.9052576228871938,
            0.8884516056388745,
            0.8998194066651657,
            0.8845804438664048
        ],
        [
            0.9785390126597939,
            0.944892190890949,
            0.9322030197062168,
            0.8920770831202265,
            0.8884516056388745,
            0.8981663212263844,
            0.8884516056388745,
            0.8924025940622914,
            0.8845804438664048
        ],
        [
            0.9635907735308918,
            0.9409483482010146,
            0.9244606961612775,
            0.8998194066651657,
            0.9692889655110029,
            0.9800722212323536,
            0.9322828463571642,
            0.9080733665777285,
            0.8884516056388745,
            0.8845804438664048
        ],
        [
            0.9869711931293288,
            0.9758552807324306,
            0.9526283100976127,
            0.9338499008067226,
            0.8923227674113441,
            0.9044478890963765,
            0.8845804438664048
        ],
        [
            0.9869711931293288,
            0.970841728493596,
            0.9782792693209615,
            0.9128340887919628,
            0.9027078312731651,
            0.8975152993422546,
            0.9014662877656716,
            0.8845804438664048
        ],
        [
            0.9800333861918877,
            0.9320371620660466,
            0.9117715249765453,
            0.8863931826070808,
            0.9308816495477759,
            0.8884516056388745,
            0.8974426184247899,
            0.8941355061520201,
            0.8845804438664048
        ],
        [
            0.9705767178122973,
            0.9657290232136329,
            0.9439761583255204,
            0.926200753984489,
            0.8884516056388745,
            0.8975152993422546,
            0.9016321454058418,
            0.9069045039876997,
            0.8845804438664048
        ],
        [
            0.9722298032510786,
            0.9471236172963955,
            0.9280861736426296,
            0.8961939291838137,
            0.9034448841465179,
            0.8900186600884329,
            0.899407864733878,
            0.8845804438664048
        ],
        [
            0.9722298032510786,
            0.9394539746689209,
            0.9098861053184045,
            0.968637943626873,
            0.8923227674113441,
            0.9266194416492592,
            0.8884516056388745,
            0.9238701745379139,
            0.8923227674113441,
            0.8845804438664048
        ],
        [
            0.9724754875421961,
            0.9427610869416907,
            0.9766701313210813,
            0.9954434739732854,
            0.9620175147430579,
            0.8993280380829307,
            0.8863931826070808,
            0.8884516056388745,
            0.8845804438664048
        ],
        [
            0.9740425419917547,
            0.9444284638474374,
            0.9065789930456347,
            0.8845804438664048
        ],
        [
            0.9696278265248259,
            0.9577543654493341,
            0.9518247806450708,
            0.8920770831202265,
            0.8900186600884329,
            0.8923227674113441,
            0.8900186600884329,
            0.8863931826070808,
            0.8884516056388745,
            0.9081460474951932
        ],
        [
            0.9450651942646019,
            0.9355101319789866,
            0.9352644476878691,
            0.9554502581264229,
            0.9557686233350052,
            0.8902643443795505,
            0.89413550615202,
            0.8995737223740482,
            0.8863931826070808,
            0.9000650909562833
        ],
        [
            0.9844943104526174,
            0.9451450209155492,
            0.9032790265063476,
            0.8845804438664048
        ],
        [
            0.9664005409030034,
            0.9388899251692211,
            0.9226479574206015,
            0.8902643443795504,
            0.9628537206575392,
            0.8884516056388745
        ],
        [
            0.9722298032510786,
            0.9411940324921323,
            0.9355828128964514,
            0.8902643443795504,
            0.9386249144879223,
            0.8902643443795504,
            0.8884516056388745,
            0.8845804438664048
        ],
        [
            0.9822833798524117,
            0.9374753782880747,
            0.9244606961612776,
            1.00964009058287,
            0.958557894901876,
            0.8884516056388745,
            0.8941355061520201,
            0.8882059213477569,
            0.8900186600884329,
            0.8884516056388745
        ],
        [
            0.9722298032510786,
            0.9447468290560196,
            0.954606906478459,
            0.9407026639098971,
            0.8845804438664048
        ],
        [
            0.9794807582137828,
            0.933777219889258,
            0.8961939291838137,
            0.895456876310461,
            0.9373955516371273,
            0.8954568763104609,
            0.8961939291838137,
            0.90303334221523,
            0.8845804438664048
        ],
        [
            0.9852444853778758,
            0.9503253721897612,
            0.9111872076914571,
            0.9523888301447707,
            0.8996535490249955,
            0.8885314322898217,
            0.8998194066651657,
            0.8980066679244898,
            0.8960280715436435,
            0.8845804438664048
        ],
        [
            0.9722298032510786,
            0.976778459031342,
            0.9256808843429405,
            0.895456876310461,
            0.8990823537918131,
            0.9873365262668159,
            0.8962737558347611,
            0.8902643443795504,
            0.8957025606015785,
            0.8961939291838137
        ],
        [
            0.9722298032510786,
            0.9319573354150992,
            0.9135842637172213,
            0.8990823537918131,
            0.8884516056388745,
            0.9283390036672299,
            0.8882059213477569,
            0.8845804438664048
        ]
    ],
    "min_energies": [
        0.8845804438664048,
        0.8885314322898217,
        0.8845804438664048,
        0.8845804438664048,
        0.8921569097711739,
        0.8939696485118499,
        0.8902643443795504,
        0.8902643443795504,
        0.8845804438664048,
        0.9045205700138412,
        0.8924824207132387,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8863931826070808,
        0.8845804438664048,
        0.8884516056388745,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.9081460474951932,
        0.9000650909562833,
        0.8845804438664048,
        0.8884516056388745,
        0.8845804438664048,
        0.8884516056388745,
        0.8845804438664048,
        0.8845804438664048,
        0.8845804438664048,
        0.8961939291838137,
        0.8845804438664048
    ],
    "op_params": [
        "[3.89019669 0.75022011 5.77617004 0.15113167 5.9587374  2.62642179\n 5.2618439 ]",
        "[0.18332908 4.98236492 1.24231651 2.70496887 1.43744135 2.2496327\n 4.91783682 1.65242567 3.5230035  1.27667797 3.15910056]",
        "[1.15621594 0.49852825 3.96144192 6.11374143 0.01761725 0.8333051\n 4.3659122 ]",
        "[1.27356187 5.5388803  0.37628537 6.12917811 4.23971642]",
        "[5.96637272 2.35027897 3.60658469 6.24988336 5.8845062  1.81707173\n 2.59008631 4.06467581 3.14464197 5.98731445 4.78100066]",
        "[2.44147243 5.34481928 0.37492737 4.71720173 3.29143628 0.8616763\n 0.8169315  3.89214497 1.74878565 5.02871015 5.32913572]",
        "1.9795179938486638",
        "1.9157177121385915",
        "[1.26192763 6.0009341  3.68946134 0.36075077 0.14956099 2.35566664\n 1.22681168 0.35020207 4.96855715]",
        "[0.2795266  3.85081973 2.50458579 6.28285005 0.02482495 3.7153944\n 2.3146686  3.14940237 2.95984166 6.21184461 3.56465551]",
        "[0.28753029 3.24955945 4.8569851  6.05309371 1.22216697 5.10184555\n 3.48584833 6.14213714 4.06494792 1.3933928  2.14073319]",
        "[2.92086423 3.53752804 2.38314858 3.13381967 5.04077683 4.88432798\n 2.81138476 2.58323714 6.09379983 5.29989783 6.00181696]",
        "[3.37200256 2.94914022 3.03575926 5.2939779  5.00949025 5.30060499\n 3.57155863 1.74067076 1.84675217 4.96177527 3.57270362]",
        "[2.62086752 1.19576809 6.12010522 5.24705137 2.31675649 0.09232786\n 4.34928976]",
        "3.3752411642627638",
        "[2.80347576 4.22307424 0.86627669 2.23407552 2.13420251 1.75581826\n 2.61773338 3.02953173 2.80950648]",
        "0.47629983303410395",
        "[5.87552523 4.71160776 0.2355901  2.26111604 5.27759799 3.91483223\n 5.29510275 2.20685313 5.91731093]",
        "[3.47510045 1.9755466  6.22253435 3.09020197 2.49213813 2.08093189\n 1.98028071 3.10815484 4.61769109]",
        "[1.25834181 5.61922214 5.50328251 1.48382669 0.18005073 6.23674189\n 0.18278019 0.46751338 5.08751101 3.50986604]",
        "[0.38682175 4.1598172  4.50484934 2.73180767 0.97083444 1.16092611\n 5.24343543 0.76684549 3.76307003 3.39359115 3.79485481]",
        "[6.00556043 2.37487224 4.76717931 6.1497244  0.1127107  5.00876093\n 1.7230815  1.75285396]",
        "[2.62988242 4.86049334 5.84530736 2.29402528 0.34600121 1.88734745\n 5.43465454 0.64988289 2.40074975]",
        "[1.27583092 5.71782886 3.0670391  1.95620186 0.29491431 5.41088531\n 0.27735241 3.62556024 4.61085484 3.94328971]",
        "[2.88491917 3.82561621 3.64604772 5.22783697 2.56319749 1.93590849\n 2.98963967 0.10027077 3.52156191 3.4212591 ]",
        "[1.3000054  5.59015253 2.7955553  2.14022364 0.21448817 2.9712594\n 0.34408632 4.45106648 2.40961218]",
        "[3.42088115 4.06747554 5.60429894 2.14143327 3.47837065 0.14680637\n 4.33808046 6.05491067 4.84832659 2.4840206  1.00582094]",
        "[4.01224956 5.45831557 4.80338328 4.22411833 5.0910891  0.81533334\n 1.38375356 2.15776763 5.26459155 4.17513888]",
        "[1.25302268 5.65826285 0.33898577 6.16468839 5.74676791]",
        "[6.0545354  3.64354159 0.53591383 6.27905962 5.10928286 5.49499018\n 0.49845679 0.09004959 5.20919395 1.2676585  1.23491959]",
        "[2.89517121 2.93171967 2.04152417 0.21663916 6.17833225 4.05960721\n 1.91096071 5.75268616 0.67725654 3.33829327 2.21985173]",
        "[0.35695818 2.13946255 4.83399104 6.08300614 2.21706572]",
        "1.0527204555226732",
        "[2.76945053 1.81998056 3.02464776 4.61611284 0.60573159 2.52076863\n 2.03765042 1.78831137 3.01031626]",
        "[5.82079445 1.63216232 4.33253718 0.50634844 1.07693811 5.29467821\n 4.95774903 5.25448135 3.1061602  0.64716823 4.27072895]",
        "[5.01875723 5.63875198 6.12071754 6.25090299 0.30440952 4.43965417]",
        "[3.49520069 1.9554944  0.99943579 2.02111872 4.82952927 2.05675892\n 3.88701891 1.67378263 3.41795447 6.06567761]",
        "[4.21279843 5.77335162 0.66210384 1.90823338 3.83507413 6.04749178\n 4.68771992 0.47831796 4.27555642 6.17707211 2.3253861 ]",
        "[4.01169221 5.6452203  3.78357619 3.418021   0.13962719 2.77719726\n 4.97727375 5.16603947 6.27579564 4.56373124 1.37931518]",
        "[2.9725529  4.79946229 1.34671238 1.77955618 0.92497947 3.87104056\n 1.81815567 1.74824836 3.59464902]"
    ],
    "op_list": [
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[3])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 3])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[3])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[3, 1])), CRY(0.0, wires=[2, 1]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[1])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[1, 3])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[1, 3])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[2, 1]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[3])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 1]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 3])), CRY(0.0, wires=[2, 1]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[1, 3])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[2, 3])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[3])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 1]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[1])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 1]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[1, 3]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[1, 2])), RY(np.float64(0.0), wires=[1])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[1, 2]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[2, 1]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[1])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[1, 3])), RY(np.float64(0.0), wires=[3])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[1])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[1, 3])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[2, 1]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[1, 3]))]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[3]), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[2, 1])), RY(np.float64(0.0), wires=[2])]",
        "[RY(np.float64(0.0), wires=[3]), CRY(0.0, wires=[3, 2])), RY(np.float64(0.0), wires=[1]), RY(np.float64(0.0), wires=[2]), CRY(0.0, wires=[3, 1])), RY(np.float64(0.0), wires=[1]), CRY(0.0, wires=[2, 3])), RY(np.float64(0.0), wires=[3])]"
    ],
    "num_iters": [
        6,
        10,
        6,
        4,
        10,
        10,
        7,
        8,
        8,
        10,
        10,
        10,
        10,
        6,
        6,
        8,
        9,
        8,
        8,
        9,
        10,
        7,
        8,
        9,
        9,
        8,
        10,
        9,
        4,
        10,
        10,
        4,
        7,
        8,
        10,
        5,
        9,
        10,
        10,
        8
    ],
    "success": [
        true,
        false,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        true
    ],
    "run_times": [
        "0:00:43.904615",
        "0:02:35.452850",
        "0:02:16.861432",
        "0:00:20.650621",
        "0:01:51.911239",
        "0:03:33.410125",
        "0:00:55.974375",
        "0:01:12.702531",
        "0:01:11.028106",
        "0:02:02.843802",
        "0:01:56.593100",
        "0:03:00.434094",
        "0:03:48.210041",
        "0:00:39.436490",
        "0:00:49.702808",
        "0:01:13.873045",
        "0:01:44.555536",
        "0:01:03.755677",
        "0:01:41.541878",
        "0:01:20.323429",
        "0:02:17.873008",
        "0:01:12.025190",
        "0:01:26.267611",
        "0:01:35.834380",
        "0:02:03.797068",
        "0:01:10.587295",
        "0:01:52.237175",
        "0:02:42.363896",
        "0:00:18.226402",
        "0:01:56.255716",
        "0:03:39.044513",
        "0:01:34.837222",
        "0:00:58.481339",
        "0:01:06.152276",
        "0:02:41.002749",
        "0:01:58.890512",
        "0:01:39.939353",
        "0:02:06.523245",
        "0:01:59.015004",
        "0:01:13.451178"
    ],
    "seeds": [
        34239969,
        48917817,
        63595665,
        78273513,
        92951361,
        107629209,
        122307057,
        13528116,
        28205964,
        42883812,
        57561660,
        72239508,
        86917356,
        101595204,
        116273052,
        7494111,
        22171959,
        36849807,
        51527655,
        66205503,
        80883351,
        95561199,
        110239047,
        1460106,
        16137954,
        30815802,
        45493650,
        60171498,
        74849346,
        89527194,
        104205042,
        118882890,
        10103949,
        24781797,
        39459645,
        54137493,
        68815341,
        83493189,
        98171037,
        112848885
    ],
    "parallel_run_time": "0:03:48.409570",
    "total_VQE_time": "1:09:35.970926",
    "total_device_time": "0:02:05.771030"
}