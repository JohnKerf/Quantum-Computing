@qml.qnode(dev)
def circuit(params):
    param_index=0
    for i in range(num_qubits-3, num_qubits):
        qml.RY(params[param_index], wires=i)
        param_index += 1

    # Apply entanglement
    for j in reversed(range(num_qubits-2, num_qubits)):
        qml.CNOT(wires=[j - 1, j])

    # Apply RY rotations
    for k in range(num_qubits-3, num_qubits):
        qml.RY(params[param_index], wires=k)
        param_index += 1
    
    return qml.expval(qml.Hermitian(H, wires=range(num_qubits)))